{"version":3,"file":"static/js/758.7dca64f6.chunk.js","mappings":"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","sources":["redux/contacts/contactSelectors.js","components/Contact/Contact.jsx","components/ContactList/ContactList.jsx","components/ContactEditor/ContactEditor.jsx","pages/Actions.js"],"sourcesContent":["export const selectLoading = state => state.contacts.isLoading;\n\nexport const selectFilter = state => state.contacts.filter;\n\nexport const selectAllContacts = state => state.contacts.items;\n","import React from 'react';\nimport { useDispatch } from 'react-redux';\nimport { deleteContact } from 'redux/contacts/contactActions';\nimport { Button, Typography } from '@mui/material';\n\nexport const Contact = ({ id, text }) => {\n  const dispatch = useDispatch();\n  const handleDelete = () => dispatch(deleteContact(id));\n\n  return (\n    <div>\n      <Typography variant=\"body1\">{text}</Typography>\n      <Button variant=\"contained\" color=\"primary\" onClick={handleDelete}>\n        Delete\n      </Button>\n    </div>\n  );\n};\n","import React, { useState } from 'react';\nimport { useSelector } from 'react-redux';\nimport { selectAllContacts } from 'redux/contacts/contactSelectors.js';\nimport { List, ListItem, ListItemText, Typography } from '@mui/material';\nimport { styled } from '@mui/system';\nimport { Contact } from '../Contact/Contact';\nimport TextField from '@mui/material/TextField';\n\nconst StyledListItem = styled(ListItem)(({ theme }) => ({\n  display: 'flex',\n  justifyContent: 'space-between',\n  alignItems: 'center',\n  padding: theme.spacing(2),\n  borderBottom: '1px solid lightgray',\n}));\n\nconst FilterContainer = styled('div')({\n  marginTop: '20px',\n});\n\nconst FilterInput = styled(TextField)({\n  width: '100%', // Розширення поля фільтра на всю доступну ширину\n});\n\nexport const ContactList = () => {\n  const contacts = useSelector(selectAllContacts);\n  const [filterText, setFilterText] = useState('');\n\n  const filteredContacts = contacts.filter(contact =>\n    contact.name.toLowerCase().includes(filterText.toLowerCase())\n  );\n\n  const handleFilterTextChange = event => {\n    setFilterText(event.target.value);\n  };\n\n  return (\n    <div>\n      <FilterContainer>\n        <FilterInput\n          label=\"Filter Contacts\"\n          variant=\"outlined\"\n          value={filterText}\n          onChange={handleFilterTextChange}\n        />\n      </FilterContainer>\n      <List>\n        {filteredContacts.map(({ id, name, number }) => (\n          <StyledListItem key={id} alignItems=\"flex-start\">\n            <ListItemText\n              primary={`Name: ${name}`}\n              secondary={\n                <Typography variant=\"body2\" color=\"textSecondary\">\n                  Number: {number}\n                </Typography>\n              }\n            />\n            <Contact id={id} />\n          </StyledListItem>\n        ))}\n      </List>\n    </div>\n  );\n};\n","import React, { useState } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { addContact } from 'redux/contacts/contactActions';\nimport { selectAllContacts } from 'redux/contacts/contactSelectors';\nimport TextField from '@mui/material/TextField';\nimport Button from '@mui/material/Button';\nimport Grid from '@mui/material/Grid';\n\nexport const ContactEditor = () => {\n  const dispatch = useDispatch();\n  const contacts = useSelector(selectAllContacts);\n\n  const [name, setName] = useState('');\n  const [number, setNumber] = useState('');\n  const [nameError, setNameError] = useState('');\n  const [numberError, setNumberError] = useState('');\n\n  const isNameUnique = name => {\n    return !contacts.some(contact => contact.name === name);\n  };\n\n  const isNumberUnique = number => {\n    return !contacts.some(contact => contact.number === number);\n  };\n\n  const handleNameChange = event => {\n    setName(event.target.value);\n\n    if (event.target.value.length < 2) {\n      setNameError('Name should be at least 2 characters');\n    } else {\n      setNameError('');\n    }\n  };\n\n  const handlePhoneChange = event => {\n    setNumber(event.target.value);\n\n    const numberRegex =\n      /^\\+?\\d{0,4}?[-.\\s]?\\(?\\d{0,3}?\\)?[-.\\s]?\\d{0,4}[-.\\s]?\\d{0,4}[-.\\s]?\\d{0,9}$/;\n    if (!numberRegex.test(event.target.value)) {\n      setNumberError('Invalid phone number format');\n    } else {\n      setNumberError('');\n    }\n  };\n\n  const handleSubmit = e => {\n    e.preventDefault();\n\n    if (name && number && !nameError && !numberError) {\n      if (isNameUnique(name) && isNumberUnique(number)) {\n        dispatch(addContact({ name, number }));\n        setName('');\n        setNumber('');\n      } else {\n        alert('Contact with the same name or number already exists.');\n      }\n    } else {\n      alert('Please correct the form errors before submitting.');\n    }\n  };\n\n  return (\n    <form onSubmit={handleSubmit}>\n      <Grid container spacing={2}>\n        <Grid item xs={12}>\n          <TextField\n            fullWidth\n            label=\"Name\"\n            variant=\"outlined\"\n            name=\"name\"\n            value={name}\n            onChange={handleNameChange}\n            error={!!nameError}\n            helperText={nameError}\n          />\n        </Grid>\n        <Grid item xs={12}>\n          <TextField\n            fullWidth\n            label=\"Phone Number\"\n            variant=\"outlined\"\n            name=\"tel\"\n            value={number}\n            onChange={handlePhoneChange}\n            error={!!numberError}\n            helperText={numberError}\n          />\n        </Grid>\n        <Grid item xs={12}>\n          <Button type=\"submit\" variant=\"contained\" color=\"primary\">\n            Add Contact\n          </Button>\n        </Grid>\n      </Grid>\n    </form>\n  );\n};\n","import { useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { Helmet } from 'react-helmet';\nimport { ContactList } from 'components/ContactList/ContactList';\nimport { ContactEditor } from 'components/ContactEditor/ContactEditor';\nimport { fetchContacts } from 'redux/contacts/contactActions';\nimport { selectLoading } from 'redux/contacts/contactSelectors';\n\nexport default function Contact() {\n  const dispatch = useDispatch();\n  const isLoading = useSelector(selectLoading);\n\n  useEffect(() => {\n    dispatch(fetchContacts());\n  }, [dispatch]);\n\n  return (\n    <>\n      <Helmet>\n        <title>Your contact</title>\n      </Helmet>\n      <ContactEditor />\n      <div>{isLoading && 'Request in progress...'}</div>\n      <ContactList />\n    </>\n  );\n}\n"],"names":["selectLoading","state","contacts","isLoading","selectAllContacts","items","Contact","_ref","id","text","dispatch","useDispatch","_jsxs","children","_jsx","Typography","variant","Button","color","onClick","deleteContact","StyledListItem","styled","ListItem","display","justifyContent","alignItems","padding","theme","spacing","borderBottom","FilterContainer","marginTop","FilterInput","TextField","width","ContactList","useSelector","_useState","useState","_useState2","_slicedToArray","filterText","setFilterText","filteredContacts","filter","contact","name","toLowerCase","includes","label","value","onChange","event","target","List","map","_ref2","number","ListItemText","primary","concat","secondary","ContactEditor","setName","_useState3","_useState4","setNumber","_useState5","_useState6","nameError","setNameError","_useState7","_useState8","numberError","setNumberError","onSubmit","e","preventDefault","some","isNameUnique","isNumberUnique","addContact","alert","Grid","container","item","xs","fullWidth","length","error","helperText","test","type","useEffect","fetchContacts","_Fragment","Helmet"],"sourceRoot":""}