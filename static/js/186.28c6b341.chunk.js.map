{"version":3,"file":"static/js/186.28c6b341.chunk.js","mappings":"wRACA,GAAgB,KAAO,wBAAwB,MAAQ,0B,SCI1CA,EAAY,WACvB,IAAMC,GAAWC,EAAAA,EAAAA,MAEjBC,GAAgCC,EAAAA,EAAAA,UAAS,CACvCC,MAAO,GACPC,SAAU,KACVC,GAAAC,EAAAA,EAAAA,GAAAL,EAAA,GAHKM,EAAQF,EAAA,GAAEG,EAAWH,EAAA,GAK5BI,GAAoCP,EAAAA,EAAAA,UAAS,CAC3CC,MAAO,GACPC,SAAU,KACVM,GAAAJ,EAAAA,EAAAA,GAAAG,EAAA,GAHKE,EAAUD,EAAA,GAAEE,EAAaF,EAAA,GAKhCG,GAAoCX,EAAAA,EAAAA,UAAS,IAAGY,GAAAR,EAAAA,EAAAA,GAAAO,EAAA,GAAzCE,EAAUD,EAAA,GAAEE,EAAaF,EAAA,GAE1BG,EAAoB,SAAAC,GACxB,IAAAC,EAAwBD,EAAME,OAAtBC,EAAIF,EAAJE,KAAMC,EAAKH,EAALG,MACdd,GAAWe,EAAAA,EAAAA,IAAAA,EAAAA,EAAAA,GAAC,CAAC,EACRhB,GAAQ,IAAAiB,EAAAA,EAAAA,GAAA,GACVH,EAAOC,IAEZ,EAEMG,EAAe,WACnB,IAAMC,EAAS,CAAC,EAOhB,OANKnB,EAASJ,QACZuB,EAAOvB,MAAQ,qBAEZI,EAASH,WACZsB,EAAOtB,SAAW,wBAEbsB,CACT,EAEMC,EAAY,eAAAC,GAAAC,EAAAA,EAAAA,IAAAC,EAAAA,EAAAA,KAAAC,MAAG,SAAAC,EAAMC,GAAC,IAAAP,EAAAQ,EAAAC,EAAA,OAAAL,EAAAA,EAAAA,KAAAM,MAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,OAEI,GAD9BN,EAAEO,iBACId,EAASD,IAEoB,IAA/BgB,OAAOC,KAAKhB,GAAQiB,OAAY,CAAAN,EAAAE,KAAA,gBAAAF,EAAAC,KAAA,EAAAD,EAAAE,KAAA,EAETxC,GAAS6C,EAAAA,EAAAA,IAAMrC,IAAW,KAAD,EAAlC,GACU,OADlB2B,EAAQG,EAAAQ,MACDC,OAAc,CAAAT,EAAAE,KAAA,SACzBQ,QAAQC,IAAI,+BAA+BX,EAAAE,KAAA,wBAAAF,EAAAE,KAAA,GAEhBL,EAASe,OAAO,KAAD,IAApCd,EAAYE,EAAAQ,OACEV,EAAae,QAC/BlC,EAAcmB,EAAae,SAE3BlC,EAAc,8CACf,QAAAqB,EAAAE,KAAA,iBAAAF,EAAAC,KAAA,GAAAD,EAAAc,GAAAd,EAAA,SAGHrB,EAAc,8CAA8C,QAAAqB,EAAAE,KAAA,iBAG9D3B,EAAcc,GAAQ,yBAAAW,EAAAe,OAAA,GAAApB,EAAA,mBAEzB,gBAvBiBqB,GAAA,OAAAzB,EAAA0B,MAAA,KAAAC,UAAA,KAyBlB,OACEC,EAAAA,EAAAA,MAAA,QAAMC,UAAWC,EAAAA,KAAUC,SAAUhC,EAAciC,aAAa,MAAKC,SAAA,EACnEL,EAAAA,EAAAA,MAAA,SAAOC,UAAWC,EAAAA,MAAUG,SAAA,CAAC,SAE3BC,EAAAA,EAAAA,KAAA,SACEC,KAAK,QACL1C,KAAK,QACLC,MAAOf,EAASJ,MAChB6D,SAAU/C,IAEXN,EAAWR,QACV2D,EAAAA,EAAAA,KAAA,OAAKL,UAAWC,EAAAA,MAAUG,SAAElD,EAAWR,YAG3CqD,EAAAA,EAAAA,MAAA,SAAOC,UAAWC,EAAAA,MAAUG,SAAA,CAAC,YAE3BC,EAAAA,EAAAA,KAAA,SACEC,KAAK,WACL1C,KAAK,WACLC,MAAOf,EAASH,SAChB4D,SAAU/C,IAEXN,EAAWP,WACV0D,EAAAA,EAAAA,KAAA,OAAKL,UAAWC,EAAAA,MAAUG,SAAElD,EAAWP,cAG1CW,IAAc+C,EAAAA,EAAAA,KAAA,OAAKL,UAAWC,EAAAA,MAAUG,SAAE9C,KAC3C+C,EAAAA,EAAAA,KAAA,UAAQC,KAAK,SAAQF,SAAC,aAG5B,EC3Fe,SAASI,IACtB,OACET,EAAAA,EAAAA,MAAA,OAAAK,SAAA,EACEC,EAAAA,EAAAA,KAACI,EAAAA,EAAM,CAAAL,UACLC,EAAAA,EAAAA,KAAA,SAAAD,SAAO,aAETC,EAAAA,EAAAA,KAAChE,EAAS,MAGhB,C","sources":["webpack://goit-react-hw-08-phonebook/./src/components/LoginForm/LoginForm.module.css?4ac5","components/LoginForm/LoginForm.jsx","pages/Login.js"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"form\":\"LoginForm_form__gPEx5\",\"label\":\"LoginForm_label__F7sLE\"};","import React, { useState } from 'react';\nimport { useDispatch } from 'react-redux';\nimport { login } from 'redux/auth/authActions';\nimport css from './LoginForm.module.css';\n\nexport const LoginForm = () => {\n  const dispatch = useDispatch();\n\n  const [formData, setFormData] = useState({\n    email: '',\n    password: '',\n  });\n\n  const [formErrors, setFormErrors] = useState({\n    email: '',\n    password: '',\n  });\n\n  const [loginError, setLoginError] = useState('');\n\n  const handleInputChange = event => {\n    const { name, value } = event.target;\n    setFormData({\n      ...formData,\n      [name]: value,\n    });\n  };\n\n  const validateForm = () => {\n    const errors = {};\n    if (!formData.email) {\n      errors.email = 'Email is required';\n    }\n    if (!formData.password) {\n      errors.password = 'Password is required';\n    }\n    return errors;\n  };\n\n  const handleSubmit = async e => {\n    e.preventDefault();\n    const errors = validateForm();\n\n    if (Object.keys(errors).length === 0) {\n      try {\n        const response = await dispatch(login(formData));\n        if (response.status === 200) {\n          console.log('User logged in successfully');\n        } else {\n          const responseData = await response.json();\n          if (responseData && responseData.message) {\n            setLoginError(responseData.message);\n          } else {\n            setLoginError('An error occurred. Please try again later.');\n          }\n        }\n      } catch (error) {\n        setLoginError('An error occurred. Please try again later.');\n      }\n    } else {\n      setFormErrors(errors);\n    }\n  };\n\n  return (\n    <form className={css.form} onSubmit={handleSubmit} autoComplete=\"off\">\n      <label className={css.label}>\n        Email\n        <input\n          type=\"email\"\n          name=\"email\"\n          value={formData.email}\n          onChange={handleInputChange}\n        />\n        {formErrors.email && (\n          <div className={css.error}>{formErrors.email}</div>\n        )}\n      </label>\n      <label className={css.label}>\n        Password\n        <input\n          type=\"password\"\n          name=\"password\"\n          value={formData.password}\n          onChange={handleInputChange}\n        />\n        {formErrors.password && (\n          <div className={css.error}>{formErrors.password}</div>\n        )}\n      </label>\n      {loginError && <div className={css.error}>{loginError}</div>}\n      <button type=\"submit\">Log In</button>\n    </form>\n  );\n};\n","import { Helmet } from 'react-helmet';\nimport { LoginForm } from 'components/LoginForm/LoginForm';\n\nexport default function Login() {\n  return (\n    <div>\n      <Helmet>\n        <title>Login</title>\n      </Helmet>\n      <LoginForm />\n    </div>\n  );\n}\n"],"names":["LoginForm","dispatch","useDispatch","_useState","useState","email","password","_useState2","_slicedToArray","formData","setFormData","_useState3","_useState4","formErrors","setFormErrors","_useState5","_useState6","loginError","setLoginError","handleInputChange","event","_event$target","target","name","value","_objectSpread","_defineProperty","validateForm","errors","handleSubmit","_ref","_asyncToGenerator","_regeneratorRuntime","mark","_callee","e","response","responseData","wrap","_context","prev","next","preventDefault","Object","keys","length","login","sent","status","console","log","json","message","t0","stop","_x","apply","arguments","_jsxs","className","css","onSubmit","autoComplete","children","_jsx","type","onChange","Login","Helmet"],"sourceRoot":""}