{"version":3,"file":"static/js/295.5bbd0a52.chunk.js","mappings":"iOACA,EAA0B,yBAA1B,EAA0D,sBAA1D,EAAyF,wB,SCG5EA,EAAU,SAAHC,GAAsB,IAAhBC,EAAED,EAAFC,GAAIC,EAAIF,EAAJE,KACtBC,GAAWC,EAAAA,EAAAA,MAGjB,OACEC,EAAAA,EAAAA,MAAA,OAAKC,UAAWC,EAAYC,SAAA,EAC1BC,EAAAA,EAAAA,KAAA,KAAGH,UAAWC,EAASC,SAAEN,KACzBO,EAAAA,EAAAA,KAAA,UAAQC,KAAK,SAASJ,UAAWC,EAAYI,QAL5B,WAAH,OAASR,GAASS,EAAAA,EAAAA,IAAcX,GAAK,EAKgBO,SAAC,aAK1E,EChBaK,EAAgB,SAAAC,GAAK,OAAIA,EAAMC,SAASC,SAAU,EAIlDC,EAAoB,SAAAH,GAAK,OAAIA,EAAMC,SAASG,KAAM,ECH/D,EAAuB,0BCIVC,EAAc,WACzB,IAAMC,GAAUC,EAAAA,EAAAA,IAAYJ,GAE5B,OACER,EAAAA,EAAAA,KAAA,MAAIH,UAAWC,EAASC,SACrBY,EAAQE,KAAI,SAAAtB,GAAA,IAAGC,EAAED,EAAFC,GAAIC,EAAIF,EAAJE,KAAI,OACtBO,EAAAA,EAAAA,KAAA,MAAAD,UACEC,EAAAA,EAAAA,KAACV,EAAO,CAACE,GAAIA,EAAIC,KAAMA,KADhBD,EAEJ,KAIb,E,SChBA,EAAuB,4BAAvB,EAA2D,6BAA3D,EAAiG,8BCIpFsB,EAAgB,WAC3B,IAAMpB,GAAWC,EAAAA,EAAAA,MAEjBoB,GAAwBC,EAAAA,EAAAA,YAAUC,GAAAC,EAAAA,EAAAA,GAAAH,EAAA,GAA3BI,EAAIF,EAAA,GAAEG,EAAOH,EAAA,GACpBI,GAA4BL,EAAAA,EAAAA,YAAUM,GAAAJ,EAAAA,EAAAA,GAAAG,EAAA,GAA/BE,EAAMD,EAAA,GAAEE,EAASF,EAAA,GAgBxB,OACE1B,EAAAA,EAAAA,MAAA,QAAMC,UAAWC,EAAU2B,SAZR,SAAAC,GACnBA,EAAEC,iBAEER,GAAQI,EACV7B,GAASkC,EAAAA,EAAAA,IAAW,CAAET,KAAAA,EAAMI,OAAAA,KAI9BM,MAAM,4CACR,EAGoD9B,SAAA,EAChDC,EAAAA,EAAAA,KAAA,SACEC,KAAK,OACLkB,KAAK,OACLtB,UAAWC,EACXgC,MAAOX,EACPY,SArBmB,SAAAC,GAAK,OAAIZ,EAAQY,EAAMC,OAAOH,MAAO,KAuB1D9B,EAAAA,EAAAA,KAAA,SACEmB,KAAK,MACLtB,UAAWC,EACXgC,MAAOP,EACPQ,SA1BoB,SAAAC,GAAK,OAAIR,EAAUQ,EAAMC,OAAOH,MAAO,KA4B7D9B,EAAAA,EAAAA,KAAA,UAAQC,KAAK,SAASJ,UAAWC,EAAWC,SAAC,kBAKnD,ECrCe,SAAST,IACtB,IAAMI,GAAWC,EAAAA,EAAAA,MACXY,GAAYK,EAAAA,EAAAA,IAAYR,GAM9B,OAJA8B,EAAAA,EAAAA,YAAU,WACRxC,GAASyC,EAAAA,EAAAA,MACX,GAAG,CAACzC,KAGFE,EAAAA,EAAAA,MAAAwC,EAAAA,SAAA,CAAArC,SAAA,EACEC,EAAAA,EAAAA,KAACqC,EAAAA,EAAM,CAAAtC,UACLC,EAAAA,EAAAA,KAAA,SAAAD,SAAO,oBAETC,EAAAA,EAAAA,KAACc,EAAa,KACdd,EAAAA,EAAAA,KAAA,OAAAD,SAAMQ,GAAa,4BACnBP,EAAAA,EAAAA,KAACU,EAAW,MAGlB,C","sources":["webpack://goit-react-hw-08-phonebook/./src/components/Contact/Contact.module.css?03fd","components/Contact/Contact.jsx","redux/contacts/contactSelectors.js","webpack://goit-react-hw-08-phonebook/./src/components/ContactList/ContactList.module.css?1ce0","components/ContactList/ContactList.jsx","webpack://goit-react-hw-08-phonebook/./src/components/ContactEditor/ContactEditor.module.css?ead8","components/ContactEditor/ContactEditor.jsx","pages/Actions.js"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"wrapper\":\"Contact_wrapper__K-zLN\",\"text\":\"Contact_text__Wq-3f\",\"button\":\"Contact_button__F+kJb\"};","import { useDispatch } from 'react-redux';\nimport { deleteContact } from 'redux/contacts/contactActions';\nimport css from './Contact.module.css';\n\nexport const Contact = ({ id, text }) => {\n  const dispatch = useDispatch();\n  const handleDelete = () => dispatch(deleteContact(id));\n\n  return (\n    <div className={css.wrapper}>\n      <p className={css.text}>{text}</p>\n      <button type=\"button\" className={css.button} onClick={handleDelete}>\n        Delete\n      </button>\n    </div>\n  );\n};\n","export const selectLoading = state => state.contacts.isLoading;\n\nexport const selectFilter = state => state.contacts.filter;\n\nexport const selectAllContacts = state => state.contacts.items;\n","// extracted by mini-css-extract-plugin\nexport default {\"list\":\"ContactList_list__csErn\"};","import { useSelector } from 'react-redux';\nimport { Contact } from '../Contact/Contact';\nimport { selectAllContacts } from 'redux/contacts/contactSelectors.js';\nimport css from './ContactList.module.css';\n\nexport const ContactList = () => {\n  const contact = useSelector(selectAllContacts);\n\n  return (\n    <ul className={css.list}>\n      {contact.map(({ id, text }) => (\n        <li key={id}>\n          <Contact id={id} text={text} />\n        </li>\n      ))}\n    </ul>\n  );\n};\n","// extracted by mini-css-extract-plugin\nexport default {\"form\":\"ContactEditor_form__U4ufl\",\"input\":\"ContactEditor_input__Nbns0\",\"button\":\"ContactEditor_button__yGZhk\"};","import { useState } from 'react';\nimport { useDispatch } from 'react-redux';\nimport { addContact } from 'redux/contacts/contactActions';\nimport css from './ContactEditor.module.css';\n\nexport const ContactEditor = () => {\n  const dispatch = useDispatch();\n\n  const [name, setName] = useState();\n  const [number, setNumber] = useState();\n\n  const handleNameChange = event => setName(event.target.value);\n  const handlePhoneChange = event => setNumber(event.target.value);\n\n  const handleSubmit = e => {\n    e.preventDefault();\n\n    if (name && number) {\n      dispatch(addContact({ name, number }));\n      return;\n    }\n\n    alert('Contact cannot be empty. Enter some text!');\n  };\n\n  return (\n    <form className={css.form} onSubmit={handleSubmit}>\n      <input\n        type=\"text\"\n        name=\"name\"\n        className={css.input}\n        value={name}\n        onChange={handleNameChange}\n      />\n      <input\n        name=\"tel\"\n        className={css.input}\n        value={number}\n        onChange={handlePhoneChange}\n      />\n      <button type=\"submit\" className={css.button}>\n        Add Contact\n      </button>\n    </form>\n  );\n};\n","import { useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { Helmet } from 'react-helmet';\nimport { ContactList } from 'components/ContactList/ContactList';\nimport { ContactEditor } from 'components/ContactEditor/ContactEditor';\nimport { fetchContacts } from 'redux/contacts/contactActions';\nimport { selectLoading } from 'redux/contacts/contactSelectors';\n\nexport default function Contact() {\n  const dispatch = useDispatch();\n  const isLoading = useSelector(selectLoading);\n\n  useEffect(() => {\n    dispatch(fetchContacts());\n  }, [dispatch]);\n\n  return (\n    <>\n      <Helmet>\n        <title>Your contact</title>\n      </Helmet>\n      <ContactEditor />\n      <div>{isLoading && 'Request in progress...'}</div>\n      <ContactList />\n    </>\n  );\n}\n"],"names":["Contact","_ref","id","text","dispatch","useDispatch","_jsxs","className","css","children","_jsx","type","onClick","deleteContact","selectLoading","state","contacts","isLoading","selectAllContacts","items","ContactList","contact","useSelector","map","ContactEditor","_useState","useState","_useState2","_slicedToArray","name","setName","_useState3","_useState4","number","setNumber","onSubmit","e","preventDefault","addContact","alert","value","onChange","event","target","useEffect","fetchContacts","_Fragment","Helmet"],"sourceRoot":""}