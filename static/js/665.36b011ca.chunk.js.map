{"version":3,"file":"static/js/665.36b011ca.chunk.js","mappings":"+RAKaA,EAAe,WAC1B,IAAMC,GAAWC,EAAAA,EAAAA,MAEjBC,GAAgCC,EAAAA,EAAAA,UAAS,CACvCC,KAAM,GACNC,MAAO,GACPC,SAAU,KACVC,GAAAC,EAAAA,EAAAA,GAAAN,EAAA,GAJKO,EAAQF,EAAA,GAAEG,EAAWH,EAAA,GAM5BI,GAAoCR,EAAAA,EAAAA,UAAS,CAC3CC,KAAM,GACNC,MAAO,GACPC,SAAU,KACVM,GAAAJ,EAAAA,EAAAA,GAAAG,EAAA,GAJKE,EAAUD,EAAA,GAAEE,EAAaF,EAAA,GAM1BG,EAAoB,SAAAC,GACxB,IAAAC,EAAwBD,EAAME,OAAtBd,EAAIa,EAAJb,KAAMe,EAAKF,EAALE,MACdT,GAAWU,EAAAA,EAAAA,IAAAA,EAAAA,EAAAA,GAAC,CAAC,EACRX,GAAQ,IAAAY,EAAAA,EAAAA,GAAA,GACVjB,EAAOe,IAEZ,EA2BA,OACEG,EAAAA,EAAAA,MAAA,QAAMC,SAZa,SAAAC,GACnBA,EAAEC,iBACF,IAAMC,EAhBa,WACnB,IAAMA,EAAS,CAAC,EAUhB,OATKjB,EAASL,OACZsB,EAAOtB,KAAO,wBAEXK,EAASJ,QACZqB,EAAOrB,MAAQ,qBAEZI,EAASH,WACZoB,EAAOpB,SAAW,wBAEboB,CACT,CAIiBC,GAEoB,IAA/BC,OAAOC,KAAKH,GAAQI,OACtB9B,GAAS+B,EAAAA,EAAAA,IAAStB,IAElBK,EAAcY,EAElB,EAGgCM,aAAa,MAAKC,SAAA,EAC9CC,EAAAA,EAAAA,KAACC,EAAAA,EAAS,CACRC,MAAM,WACNC,KAAK,OACLjC,KAAK,OACLe,MAAOV,EAASL,KAChBkC,SAAUvB,EACVwB,QAAQ,WACRC,WAAS,EACTC,OAAO,SACPC,QAAS7B,EAAWT,KACpBuC,WAAY9B,EAAWT,QAEzB8B,EAAAA,EAAAA,KAACC,EAAAA,EAAS,CACRC,MAAM,QACNC,KAAK,QACLjC,KAAK,QACLe,MAAOV,EAASJ,MAChBiC,SAAUvB,EACVwB,QAAQ,WACRC,WAAS,EACTC,OAAO,SACPC,QAAS7B,EAAWR,MACpBsC,WAAY9B,EAAWR,SAEzB6B,EAAAA,EAAAA,KAACC,EAAAA,EAAS,CACRC,MAAM,WACNC,KAAK,WACLjC,KAAK,WACLe,MAAOV,EAASH,SAChBgC,SAAUvB,EACVwB,QAAQ,WACRC,WAAS,EACTC,OAAO,SACPC,QAAS7B,EAAWP,SACpBqC,WAAY9B,EAAWP,YAEzB4B,EAAAA,EAAAA,KAACU,EAAAA,EAAM,CAACP,KAAK,SAASE,QAAQ,YAAYM,MAAM,UAAUL,WAAS,EAAAP,SAAC,eAK1E,EC7Fe,SAASa,IACtB,OACExB,EAAAA,EAAAA,MAAA,OAAAW,SAAA,EACEC,EAAAA,EAAAA,KAACa,EAAAA,EAAM,CAAAd,UACLC,EAAAA,EAAAA,KAAA,SAAAD,SAAO,oBAETC,EAAAA,EAAAA,KAACnC,EAAY,MAGnB,C","sources":["components/RegisterForm/RegisterForm.jsx","pages/Register.js"],"sourcesContent":["import React, { useState } from 'react';\nimport { useDispatch } from 'react-redux';\nimport { register } from 'redux/auth/authActions';\nimport { TextField, Button } from '@mui/material';\n\nexport const RegisterForm = () => {\n  const dispatch = useDispatch();\n\n  const [formData, setFormData] = useState({\n    name: '',\n    email: '',\n    password: '',\n  });\n\n  const [formErrors, setFormErrors] = useState({\n    name: '',\n    email: '',\n    password: '',\n  });\n\n  const handleInputChange = event => {\n    const { name, value } = event.target;\n    setFormData({\n      ...formData,\n      [name]: value,\n    });\n  };\n\n  const validateForm = () => {\n    const errors = {};\n    if (!formData.name) {\n      errors.name = 'Username is required';\n    }\n    if (!formData.email) {\n      errors.email = 'Email is required';\n    }\n    if (!formData.password) {\n      errors.password = 'Password is required';\n    }\n    return errors;\n  };\n\n  const handleSubmit = e => {\n    e.preventDefault();\n    const errors = validateForm();\n\n    if (Object.keys(errors).length === 0) {\n      dispatch(register(formData));\n    } else {\n      setFormErrors(errors);\n    }\n  };\n\n  return (\n    <form onSubmit={handleSubmit} autoComplete=\"off\">\n      <TextField\n        label=\"Username\"\n        type=\"text\"\n        name=\"name\"\n        value={formData.name}\n        onChange={handleInputChange}\n        variant=\"outlined\"\n        fullWidth\n        margin=\"normal\"\n        error={!!formErrors.name}\n        helperText={formErrors.name}\n      />\n      <TextField\n        label=\"Email\"\n        type=\"email\"\n        name=\"email\"\n        value={formData.email}\n        onChange={handleInputChange}\n        variant=\"outlined\"\n        fullWidth\n        margin=\"normal\"\n        error={!!formErrors.email}\n        helperText={formErrors.email}\n      />\n      <TextField\n        label=\"Password\"\n        type=\"password\"\n        name=\"password\"\n        value={formData.password}\n        onChange={handleInputChange}\n        variant=\"outlined\"\n        fullWidth\n        margin=\"normal\"\n        error={!!formErrors.password}\n        helperText={formErrors.password}\n      />\n      <Button type=\"submit\" variant=\"contained\" color=\"primary\" fullWidth>\n        Register\n      </Button>\n    </form>\n  );\n};\n","import { Helmet } from 'react-helmet';\nimport { RegisterForm } from 'components/RegisterForm/RegisterForm';\n\nexport default function Register() {\n  return (\n    <div>\n      <Helmet>\n        <title>Registration</title>\n      </Helmet>\n      <RegisterForm />\n    </div>\n  );\n}\n"],"names":["RegisterForm","dispatch","useDispatch","_useState","useState","name","email","password","_useState2","_slicedToArray","formData","setFormData","_useState3","_useState4","formErrors","setFormErrors","handleInputChange","event","_event$target","target","value","_objectSpread","_defineProperty","_jsxs","onSubmit","e","preventDefault","errors","validateForm","Object","keys","length","register","autoComplete","children","_jsx","TextField","label","type","onChange","variant","fullWidth","margin","error","helperText","Button","color","Register","Helmet"],"sourceRoot":""}