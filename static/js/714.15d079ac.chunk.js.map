{"version":3,"file":"static/js/714.15d079ac.chunk.js","mappings":"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","sources":["redux/contacts/contactSelectors.js","components/ContactList/ContactList.jsx","components/ContactEditor/ContactEditor.jsx","pages/Actions.js"],"sourcesContent":["export const selectLoading = state => state.contacts.isLoading;\n\nexport const selectFilter = state => state.contacts.filter;\n\nexport const selectAllContacts = state => state.contacts.items;\n","import React from 'react';\nimport { useSelector } from 'react-redux';\nimport { selectAllContacts } from 'redux/contacts/contactSelectors.js';\nimport { List, ListItem, ListItemText, Typography } from '@mui/material';\n\nexport const ContactList = () => {\n  const contacts = useSelector(selectAllContacts);\n\n  return (\n    <List>\n      {contacts.map(({ id, name, number }) => (\n        <ListItem key={id} alignItems=\"flex-start\">\n          <ListItemText\n            primary={`Name: ${name}`}\n            secondary={\n              <Typography variant=\"body2\" color=\"textSecondary\">\n                Number: {number}\n              </Typography>\n            }\n          />\n        </ListItem>\n      ))}\n    </List>\n  );\n};\n","import React, { useState } from 'react';\nimport { useDispatch } from 'react-redux';\nimport { addContact } from 'redux/contacts/contactActions';\nimport TextField from '@mui/material/TextField';\nimport Button from '@mui/material/Button';\nimport Grid from '@mui/material/Grid';\n\nexport const ContactEditor = () => {\n  const dispatch = useDispatch();\n\n  const [name, setName] = useState('');\n  const [number, setNumber] = useState('');\n  const [nameError, setNameError] = useState('');\n  const [numberError, setNumberError] = useState('');\n\n  const handleNameChange = event => {\n    setName(event.target.value);\n\n    if (event.target.value.length < 2) {\n      setNameError('Name should be at least 2 characters');\n    } else {\n      setNameError('');\n    }\n  };\n\n  const handlePhoneChange = event => {\n    setNumber(event.target.value);\n\n    const numberRegex =\n      /^\\+?\\d{0,4}?[-.\\s]?\\(?\\d{0,3}?\\)?[-.\\s]?\\d{0,4}[-.\\s]?\\d{0,4}[-.\\s]?\\d{0,9}$/;\n    if (!numberRegex.test(event.target.value)) {\n      setNumberError('Invalid phone number format');\n    } else {\n      setNumberError('');\n    }\n  };\n\n  const handleSubmit = e => {\n    e.preventDefault();\n\n    if (name && number && !nameError && !numberError) {\n      dispatch(addContact({ name, number }));\n\n      setName('');\n      setNumber('');\n    } else {\n      alert('Please correct the form errors before submitting.');\n    }\n  };\n\n  return (\n    <form onSubmit={handleSubmit}>\n      <Grid container spacing={2}>\n        <Grid item xs={12}>\n          <TextField\n            fullWidth\n            label=\"Name\"\n            variant=\"outlined\"\n            name=\"name\"\n            value={name}\n            onChange={handleNameChange}\n            error={!!nameError}\n            helperText={nameError}\n          />\n        </Grid>\n        <Grid item xs={12}>\n          <TextField\n            fullWidth\n            label=\"Phone Number\"\n            variant=\"outlined\"\n            name=\"tel\"\n            value={number}\n            onChange={handlePhoneChange}\n            error={!!numberError}\n            helperText={numberError}\n          />\n        </Grid>\n        <Grid item xs={12}>\n          <Button type=\"submit\" variant=\"contained\" color=\"primary\">\n            Add Contact\n          </Button>\n        </Grid>\n      </Grid>\n    </form>\n  );\n};\n","import { useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { Helmet } from 'react-helmet';\nimport { ContactList } from 'components/ContactList/ContactList';\nimport { ContactEditor } from 'components/ContactEditor/ContactEditor';\nimport { fetchContacts } from 'redux/contacts/contactActions';\nimport { selectLoading } from 'redux/contacts/contactSelectors';\n\nexport default function Contact() {\n  const dispatch = useDispatch();\n  const isLoading = useSelector(selectLoading);\n\n  useEffect(() => {\n    dispatch(fetchContacts());\n  }, [dispatch]);\n\n  return (\n    <>\n      <Helmet>\n        <title>Your contact</title>\n      </Helmet>\n      <ContactEditor />\n      <div>{isLoading && 'Request in progress...'}</div>\n      <ContactList />\n    </>\n  );\n}\n"],"names":["selectLoading","state","contacts","isLoading","selectAllContacts","items","ContactList","useSelector","_jsx","List","children","map","_ref","id","name","number","ListItem","alignItems","ListItemText","primary","concat","secondary","_jsxs","Typography","variant","color","ContactEditor","dispatch","useDispatch","_useState","useState","_useState2","_slicedToArray","setName","_useState3","_useState4","setNumber","_useState5","_useState6","nameError","setNameError","_useState7","_useState8","numberError","setNumberError","onSubmit","e","preventDefault","addContact","alert","Grid","container","spacing","item","xs","TextField","fullWidth","label","value","onChange","event","target","length","error","helperText","test","Button","type","Contact","useEffect","fetchContacts","_Fragment","Helmet"],"sourceRoot":""}