{"version":3,"file":"static/js/758.8865ab7b.chunk.js","mappings":"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","sources":["redux/contacts/contactSelectors.js","components/Contact/Contact.jsx","components/ContactList/ContactList.jsx","components/ContactEditor/ContactEditor.jsx","pages/Actions.js"],"sourcesContent":["export const selectLoading = state => state.contacts.isLoading;\n\nexport const selectFilter = state => state.contacts.filter;\n\nexport const selectAllContacts = state => state.contacts.items;\n","import React from 'react';\nimport { useDispatch } from 'react-redux';\nimport { deleteContact } from 'redux/contacts/contactActions';\nimport { Button, Typography } from '@mui/material';\n\nexport const Contact = ({ id, text }) => {\n  const dispatch = useDispatch();\n  const handleDelete = () => dispatch(deleteContact(id));\n\n  return (\n    <div>\n      <Typography variant=\"body1\">{text}</Typography>\n      <Button variant=\"contained\" color=\"primary\" onClick={handleDelete}>\n        Delete\n      </Button>\n    </div>\n  );\n};\n","import React from 'react';\nimport { useSelector } from 'react-redux';\nimport { selectAllContacts } from 'redux/contacts/contactSelectors.js';\nimport { List, ListItem, ListItemText, Typography } from '@mui/material';\nimport { styled } from '@mui/system';\nimport { Contact } from '../Contact/Contact';\n\nconst StyledListItem = styled(ListItem)(({ theme }) => ({\n  display: 'flex',\n  justifyContent: 'space-between',\n  alignItems: 'center',\n  padding: theme.spacing(2),\n  borderBottom: '1px solid lightgray',\n}));\n\nexport const ContactList = () => {\n  const contacts = useSelector(selectAllContacts);\n\n  return (\n    <List>\n      {contacts.map(({ id, name, number }) => (\n        <StyledListItem key={id} alignItems=\"flex-start\">\n          <ListItemText\n            primary={`Name: ${name}`}\n            secondary={\n              <Typography variant=\"body2\" color=\"textSecondary\">\n                Number: {number}\n              </Typography>\n            }\n          />\n\n          <Contact id={id} />\n        </StyledListItem>\n      ))}\n    </List>\n  );\n};\n\n \n","import React, { useState } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { addContact } from 'redux/contacts/contactActions';\nimport { selectAllContacts } from 'redux/contacts/contactSelectors';\nimport TextField from '@mui/material/TextField';\nimport Button from '@mui/material/Button';\nimport Grid from '@mui/material/Grid';\n\nexport const ContactEditor = () => {\n  const dispatch = useDispatch();\n  const contacts = useSelector(selectAllContacts);\n\n  const [name, setName] = useState('');\n  const [number, setNumber] = useState('');\n  const [nameError, setNameError] = useState('');\n  const [numberError, setNumberError] = useState('');\n\n  const isNameUnique = name => {\n    return !contacts.some(contact => contact.name === name);\n  };\n\n  const isNumberUnique = number => {\n    return !contacts.some(contact => contact.number === number);\n  };\n\n  const handleNameChange = event => {\n    setName(event.target.value);\n\n    if (event.target.value.length < 2) {\n      setNameError('Name should be at least 2 characters');\n    } else {\n      setNameError('');\n    }\n  };\n\n  const handlePhoneChange = event => {\n    setNumber(event.target.value);\n\n    const numberRegex =\n      /^\\+?\\d{0,4}?[-.\\s]?\\(?\\d{0,3}?\\)?[-.\\s]?\\d{0,4}[-.\\s]?\\d{0,4}[-.\\s]?\\d{0,9}$/;\n    if (!numberRegex.test(event.target.value)) {\n      setNumberError('Invalid phone number format');\n    } else {\n      setNumberError('');\n    }\n  };\n\n  const handleSubmit = e => {\n    e.preventDefault();\n\n    if (name && number && !nameError && !numberError) {\n      if (isNameUnique(name) && isNumberUnique(number)) {\n        dispatch(addContact({ name, number }));\n        setName('');\n        setNumber('');\n      } else {\n        alert('Contact with the same name or number already exists.');\n      }\n    } else {\n      alert('Please correct the form errors before submitting.');\n    }\n  };\n\n  return (\n    <form onSubmit={handleSubmit}>\n      <Grid container spacing={2}>\n        <Grid item xs={12}>\n          <TextField\n            fullWidth\n            label=\"Name\"\n            variant=\"outlined\"\n            name=\"name\"\n            value={name}\n            onChange={handleNameChange}\n            error={!!nameError}\n            helperText={nameError}\n          />\n        </Grid>\n        <Grid item xs={12}>\n          <TextField\n            fullWidth\n            label=\"Phone Number\"\n            variant=\"outlined\"\n            name=\"tel\"\n            value={number}\n            onChange={handlePhoneChange}\n            error={!!numberError}\n            helperText={numberError}\n          />\n        </Grid>\n        <Grid item xs={12}>\n          <Button type=\"submit\" variant=\"contained\" color=\"primary\">\n            Add Contact\n          </Button>\n        </Grid>\n      </Grid>\n    </form>\n  );\n};\n","import { useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { Helmet } from 'react-helmet';\nimport { ContactList } from 'components/ContactList/ContactList';\nimport { ContactEditor } from 'components/ContactEditor/ContactEditor';\nimport { fetchContacts } from 'redux/contacts/contactActions';\nimport { selectLoading } from 'redux/contacts/contactSelectors';\n\nexport default function Contact() {\n  const dispatch = useDispatch();\n  const isLoading = useSelector(selectLoading);\n\n  useEffect(() => {\n    dispatch(fetchContacts());\n  }, [dispatch]);\n\n  return (\n    <>\n      <Helmet>\n        <title>Your contact</title>\n      </Helmet>\n      <ContactEditor />\n      <div>{isLoading && 'Request in progress...'}</div>\n      <ContactList />\n    </>\n  );\n}\n"],"names":["selectLoading","state","contacts","isLoading","selectAllContacts","items","Contact","_ref","id","text","dispatch","useDispatch","_jsxs","children","_jsx","Typography","variant","Button","color","onClick","deleteContact","StyledListItem","styled","ListItem","display","justifyContent","alignItems","padding","theme","spacing","borderBottom","ContactList","useSelector","List","map","_ref2","name","number","ListItemText","primary","concat","secondary","ContactEditor","_useState","useState","_useState2","_slicedToArray","setName","_useState3","_useState4","setNumber","_useState5","_useState6","nameError","setNameError","_useState7","_useState8","numberError","setNumberError","onSubmit","e","preventDefault","some","contact","isNameUnique","isNumberUnique","addContact","alert","Grid","container","item","xs","TextField","fullWidth","label","value","onChange","event","target","length","error","helperText","test","type","useEffect","fetchContacts","_Fragment","Helmet"],"sourceRoot":""}